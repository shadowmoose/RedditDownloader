name: Pytest

on:
  push:
  schedule:
    - cron:  '0 8 * * *'

jobs:
  run-tests:
    name: ${{ matrix.os }}, ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      max-parallel: 3
      matrix:
        os: [ubuntu, windows, macOS]
        python-version: [3.5, 3.6, 3.7]

    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get Python Package Location
        run: |
          echo "::set-output name=path::$(python -c 'import site; print(site.getusersitepackages().replace(chr(92), chr(47)))')"
        id: get_location

      - name: Activate Cache
        uses: actions/cache@preview
        with:
          path: ${{ steps.get_location.outputs.path }}
          key: pytest-${{ matrix.os }}-${{ matrix.python-version }}-libs-${{ hashFiles('**/**equirement*.txt') }}
          restore-keys: |
            pytest-${{ matrix.os }}-${{ matrix.python-version }}-libs-

      - name: Install dev dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          pip install --upgrade -r requirements.txt --user
          pip install --upgrade -r requirements-dev.txt --user

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Test with pytest
        env:
          RMD_REFRESH_TOKEN: ${{secrets.RMD_REFRESH_TOKEN}}
          RMD_IMGUR_ID: ${{secrets.RMD_IMGUR_ID}}
          RMD_IMGUR_SECRET: ${{secrets.RMD_IMGUR_SECRET}}
        run: |
          pytest --cov=./ --cov-report=xml --verbose redditdownloader/

      - name: Upload coverage to Codecov
        run: |
          pip install codecov
          codecov -t ${{secrets.CODECOV_TOKEN}} --name "${{ matrix.os }}, ${{ matrix.python-version }}"
