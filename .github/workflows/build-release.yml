name: Build Release Assets

on:
  release:
    types: [published]
  schedule:  # Check for package updates every 6 hours.
    - cron:  '0 */6 * * *'
  push:

jobs:
  publish:
    name: Publish for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      matrix:
        os: [windows-latest, ubuntu-16.04, macOS-latest]
        include:
          - os: windows-latest
            artifact: RMD-windows.exe
            path: ./dist/RedditDownloader.exe
            run_test: ./dist/RedditDownloader.exe --skip_update --run_tests=*
          - os: ubuntu-16.04
            artifact: RMD-ubuntu
            path: ./dist/RedditDownloader
            run_test: chmod +x ./dist/RedditDownloader && ./dist/RedditDownloader --skip_update --run_tests=*
          - os: macOS-latest
            artifact: RMD-macOS
            path: ./dist/RedditDownloader
            run_test: chmod +x ./dist/RedditDownloader && ./dist/RedditDownloader --skip_update --run_tests=*

    steps:
      - name: Check for Required Package Updates
        uses: shadowmoose/GHA-Compare-PyPi@1.1.1
        id: update
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          owner: shadowmoose
          repo: RedditDownloader
          asset: ${{ matrix.artifact }}
          files: requirements.txt

      - name: Print Update Info
        run: |
          echo "Artifact Name: ${{ matrix.artifact }}"
          echo "Latest Release Tag: ${{ steps.update.outputs.release_tag }}"
          echo "Update Packages: ${{ steps.update.outputs.updated_packages }}"
          echo "Needs Update: ${{ steps.update.outputs.update_available }}"

      - uses: actions/checkout@v1
        if: steps.update.outputs.update_available == 'true'
        with:
          ref: ${{ steps.update.outputs.release_tag }}

      - name: Set up Python 3.7
        if: steps.update.outputs.update_available == 'true'
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Requirements
        if: steps.update.outputs.update_available == 'true'
        run: |
          pip install -r requirements.txt
          pip install -r requirements-dev.txt
          pip install --upgrade 'setuptools>=49.1.1'

      - name: Build with PyInstaller
        if: steps.update.outputs.update_available == 'true'
        run: |
          pyinstaller build-rmd.spec

      - name: Run Unit Tests
        if: steps.update.outputs.update_available == 'true'
        run: |
          ${{matrix.run_test}}
        env:
          RMD_REFRESH_TOKEN: ${{secrets.RMD_REFRESH_TOKEN}}
          RMD_IMGUR_ID: ${{secrets.RMD_IMGUR_ID}}
          RMD_IMGUR_SECRET: ${{secrets.RMD_IMGUR_SECRET}}

      - name: Upload binaries to release
        if: steps.update.outputs.update_available == 'true'
        uses: svenstaro/upload-release-action@1.0.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.path }}
          overwrite: true
          asset_name: ${{ matrix.artifact }}
          tag: ${{ steps.update.outputs.release_tag }}


  update-release-info:
    name: Update Artifact Metadata
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - name: Build Data File
        uses: shadowmoose/Github-Release-Data-Action@3.0.0
        id: build
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          outFile: ./_public/release.json
          owner: shadowmoose
          repo: RedditDownloader

      - name: Deploy to release-metadata branch
        if: steps.build.outputs.is_released == 'true'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./_public
          publish_branch: release-metadata-3.x
          user_name: "shadow-bot"
          user_email: "github_bot@github.com"
          allow_empty_commit: false
          #force_orphan: true
